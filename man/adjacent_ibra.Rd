% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/adjacent_ibra.R
\name{adjacent_ibra}
\alias{adjacent_ibra}
\title{Subset IBRA 7 by points}
\usage{
adjacent_ibra(pts, min_n = 1, include_type = "polygon",
  expand_type = include_type, plot_output = FALSE)
}
\arguments{
\item{pts}{A SpatialPoints* object.}

\item{min_n}{The minimum number of points a subregion must contain in order
for it to be included in the returned subset.}

\item{include_type}{Character. Either \code{'polygon'}, \code{'region'} or
\code{'subregion'}. This determines the level of aggregation at which
occupied IBRA polygons will be considered. For \code{'polygon'}, adjacency
will be calculated with respect to the polygons that actually contain
\code{min_n} or more points, whereas for \code{'subregion'} (and
\code{'region'}), adjacency will be calculated with respect to all polygons
belonging to the IBRA subregions (or regions) that have polygons containing
at least \code{min_n} points. Default is \code{'polygon'}.}

\item{expand_type}{Character. Either \code{'polygon'}, \code{'region'} or
\code{'subregion'}. This determines the level of aggregation at which
neighbouring IBRA polygons will be aggregated prior to calculating
adjacency. For \code{'polygon'}, only the polygons adjacent to those
polygons with \code{min_n} or more points will be considered neighbours,
whereas for whereas for \code{'subregion'} (and \code{'region'}),
neighbours will comprise all polygons belonging to the IBRA subregions (or
regions) that have polygons adjacent to polygons containing at least
\code{min_n} points. Default behaviour is for \code{expand_type} to be the
same as \code{include_type}.}

\item{plot_output}{Logical. Should the resulting polygon subset be plotted?
If \code{TRUE}, the polygons and points will be plotted. Points that don't
overlie an IBRA 7 subregion will be plotted in red.}
}
\value{
A \code{SpatialPolygonsDataFrame} representing the subset of regions
  (or subregions, see \code{type}) of \code{ibra7_albers} within which
  \code{min_n} or more points (pts) fall, and those regions (or subregions)
  adjacent to these.
}
\description{
Subset IBRA 7 to those polygons that contain, or are adjacent to polygons
that contain, one or more given points.
}
\examples{
library(sp)
xy <- SpatialPoints(data.frame(x=runif(1000, 140, 145), y=runif(1000, -38, -35)))
proj4string(xy) <- '+init=epsg:4283'

#' # Polygons with at least 1 point
adj <- adjacent_ibra(xy, include_type='polygon')
plot(adj, col='gray80', border='transparent')

# Polygons with at least 20 points
adj2 <- adjacent_ibra(xy, include_type='polygon', min_n=20)
plot(adj2, col='gray60', border='transparent', add=TRUE)

# Sub-regions with at least 1 point
adj3 <- adjacent_ibra(xy, include_type='subregion')
plot(adj3, col='gray80', border='transparent')

# Sub-regions with at least 20 points
adj4 <- adjacent_ibra(xy, include_type='subregion', min_n=20)
plot(adj4, col='gray60', border='transparent', add=TRUE)

# Regions with at least 1 point
adj5 <- adjacent_ibra(xy, include_type='region')
plot(adj5, col='gray80', border='transparent')

# Regions with at least 20 points
adj6 <- adjacent_ibra(xy, min_n=20, include_type='region')
plot(adj6, col='gray60', border='transparent', add=TRUE)

# With plot_output=TRUE
adj7 <- adjacent_ibra(xy, plot_output=TRUE)

# Compare include_type and expand_type
apply(expand.grid(c('polygon', 'subregion', 'region'),
                  c('polygon', 'subregion', 'region')), 1,
      function(x) {
        adjacent_ibra(xy, include_type=x[1], expand_type=x[2], plot=TRUE)
        title(main=sprintf('include type: \%s; expand type: \%s', x[1], x[2]))
      })
}
\seealso{
\code{\link{ibra_region}}
}
\keyword{ibra}
\keyword{spatial,}

